AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys Suse Cloud Application Platform into a new EKS cluster in a new VPC (qs-1p817shr2) 
Metadata:
  LintSpellExclude:
    - Suse
    - Cloud
    - Application
    - Platform
    - foundry
    - dcd
    - vpc
    - kubernetes
    - uploader
    - Stratos
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Route 53 DNS configuration
        Parameters:
          - HostedZoneID
          - DomainName
          - SubDomainPrefix
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: VPC network configuration
        Parameters:
          - AvailabilityZones
          - RemoteAccessCIDR
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - NodeInstanceType
          - NumberOfInfraNodes
          - NumberOfAppNodes
          - NodeGroupName
          - NodeVolumeSize
          - AdditionalEKSAdminArns
      - Label:
          default: SUSE Cloud Application Platform configuration
        Parameters:
          - StratosWebConsole
          - UaaReplicas
          - UaaMysqlReplicas
          - TcpRouterReplicas
          - ScfMysqlReplicas
          - RoutingApiReplicas
          - RouterReplicas
          - NatsReplicas
          - DiegoSshReplicas
          - DiegoBrainReplicas
          - DiegoApiReplicas
          - CcUploaderReplicas
          - AdapterReplicas
          - ApiGroupReplicas
          - CcClockReplicas
          - CcWorkerReplicas
          - CfUsbReplicas
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
          - LambdaZipsBucketName
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      KeyPairName:
        default: SSH key name
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      VPCCIDR:
        default: VPC CIDR
      NodeInstanceType:
        default: Nodes instance type
      NumberOfAppNodes:
        default: Number of application nodes
      NumberOfInfraNodes:
        default: Number of infrastructure nodes
      NodeGroupName:
        default: Node group name
      NodeVolumeSize:
        default: Node volume size
      AdditionalEKSAdminArns:
        default: Additional EKS admin ARNs
      LambdaZipsBucketName:
        default: Lambda zips bucket name
      HostedZoneID:
        default: Hosted zone ID
      DomainName:
        default: Domain name
      SubDomainPrefix:
        default: Sub-domain prefix
      UaaMysqlReplicas:
        default: Number of UAA MySQL replicas
      UaaReplicas:
        default: Number of UAA replicas
      TcpRouterReplicas:
        default: Number of TCP router replicas
      ScfMysqlReplicas:
        default: Number of SCF MySQL replicas
      RoutingApiReplicas:
        default: Number of routing api replicas
      RouterReplicas:
        default: Number of router replicas
      NatsReplicas:
        default: Number of NATS replicas
      DiegoSshReplicas:
        default: Number of diego SSH replicas
      DiegoBrainReplicas:
        default: Number of diego brain replicas
      DiegoApiReplicas:
        default: Number of diego API replicas
      CcUploaderReplicas:
        default: Number of CC uploader replicas
      AdapterReplicas:
        default: Number of adapter replicas
      ApiGroupReplicas:
        default: Number of API group replicas
      CcClockReplicas:
        default: Number of CC clock replicas
      CcWorkerReplicas:
        default: Number of CC worker replicas
      CfUsbReplicas:
        default: Number of CF USB replicas
      StratosWebConsole:
        default: Stratos web console
Parameters:
  AvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC. The Quick Starts uses three
      Availability Zones for this deployment and preserves the logical order of your selections.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: The CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: The CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: The CIDR block for private subnet 3 located in Availability Zone 3.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: The CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: The CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2.
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.160.0/20
    Description: The CIDR block for the public (DMZ) subnet 3 located in Availability
      Zone 3.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z\.]+([0-9a-zA-Z-\.]*[0-9a-zA-Z\.])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/\.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-suse-cloud-application-platform/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: "The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value."
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend
      that you set this value to a trusted IP range.
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC.
    Type: String
  AdditionalEKSAdminArns:
    Default: ""
    Description: "[OPTIONAL] A comma-separated list of IAM users/roles to be granted administrative access to the
      Amazon EKS cluster."
    Type: CommaDelimitedList
  NodeInstanceType:
    Default: m5.large
    AllowedValues:
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - x1.16xlarge
    - x1.32xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    - r5.large
    - r5.xlarge
    - r5.2xlarge
    - r5.4xlarge
    - r5.12xlarge
    - r5.24xlarge
    - r5d.large
    - r5d.xlarge
    - r5d.2xlarge
    - r5d.4xlarge
    - r5d.12xlarge
    - r5d.24xlarge
    - z1d.large
    - z1d.xlarge
    - z1d.2xlarge
    - z1d.3xlarge
    - z1d.6xlarge
    - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: The EC2 instance type to use for the worker node instances.
    Type: String
  NumberOfInfraNodes:
    Default: 3
    Description: The number of Amazon EKS worker node instances in the infrastructure AutoScaling group.
    Type: Number
  NumberOfAppNodes:
    Default: 3
    Description: The number of Amazon EKS worker node instances in the customer applications AutoScaling group.
    Type: Number
  NodeGroupName:
    Default: Default
    Description: The name for the Amazon EKS node group.
    Type: String
  NodeVolumeSize:
    Default: 80
    Description: The size of the node volumes.
    Type: String
  LambdaZipsBucketName:
    Description: '[OPTIONAL] Bucket name where the lambda zip files should be placed,
      if left blank a bucket will be created.'
    Type: String
    Default: ''
  HostedZoneID:
    Description: 'The Route 53 hosted zone ID to use as a base domain.'
    Type: String
  DomainName:
    Description: 'The domain name to use as a base domain.'
    Type: String
  SubDomainPrefix:
    Default: 'scf'
    Type: String
    Description: 'The prefix to add to the base domain to create a new Route 53 hosted zone. Before you launch the
      Quick Start, make sure that a hosted zone with this name does not exist.'
  UaaMysqlReplicas:
    Default: 3 
    Type: Number
    Description: "The number of UAA MySQL replicas to deploy."
  UaaReplicas: 
    Default: 3 
    Type: Number
    Description: "The number of UAA replicas to deploy."
  TcpRouterReplicas:
    Default: 2
    Type: Number
    Description: "The number of TCP router replicas to deploy."
  ScfMysqlReplicas:
    Default: 3 
    Type: Number
    Description: "SUSE Cloud Foundry (SCF) MySQL replicas to deploy."
  RoutingApiReplicas:
    Default: 2
    Type: Number
    Description: "The number of routing API replicas to deploy."
  RouterReplicas:
    Default: 2
    Type: Number
    Description: "The number of router replicas to deploy."
  NatsReplicas:
    Default: 2
    Type: Number
    Description: "The number of NATS replicas to deploy."
  DiegoSshReplicas:
    Default: 2
    Type: Number
    Description: "The number of diego SSH replicas to deploy."
  DiegoBrainReplicas:
    Default: 2
    Type: Number
    Description: "The number of diego brain replicas to deploy."
  DiegoApiReplicas:
    Default: 2
    Type: Number
    Description: "The number of diego API replicas to deploy."
  CcUploaderReplicas:
    Default: 2
    Type: Number
    Description: "The number of CC uploader replicas to deploy."
  AdapterReplicas:
    Default: 2
    Type: Number
    Description: "The number of adapter replicas to deploy."
  ApiGroupReplicas:
    Default: 2
    Type: Number
    Description: "The number of API group replicas to deploy."
  CcClockReplicas:
    Default: 2
    Type: Number
    Description: "The number of CC clock replicas to deploy."
  CcWorkerReplicas:
    Default: 2
    Type: Number
    Description: "The number of CC worker replicas to deploy."
  CfUsbReplicas:
    Default: 2
    Type: Number
    Description: "The number of CF USB replicas to deploy."
  StratosWebConsole:
    Type: String
    AllowedValues: ["Enabled", "Disabled"]
    Default: "Disabled"
    Description: The Stratos web console provides a web based UI
Rules:
  EKSSupport:
    Assertions:
      - AssertDescription: Your AWS Region does *NOT* yet support Amazon EKS
        Assert: !Contains
          -  - us-west-2
             - us-east-1
             - us-east-2
             - eu-west-1
             - eu-west-2
             - eu-west-3
             - eu-north-1
             - eu-central-1
             - ap-southeast-1
             - ap-southeast-2
             - ap-northeast-1
             - ap-northeast-2
             - ap-south-1
          - !Ref 'AWS::Region'
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [ ',', !Ref 'AvailabilityZones' ]
        KeyPairName: !Ref 'KeyPairName'
        NumberOfAZs: '3'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PrivateSubnet3ACIDR: !Ref 'PrivateSubnet3CIDR'
        PrivateSubnetATag2: !Sub "kubernetes.io/cluster/${AWS::StackName}-${AWS::Region}=owned"
        PrivateSubnetATag3: "kubernetes.io/role/internal-elb="
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PublicSubnet3CIDR: !Ref 'PublicSubnet3CIDR'
        PublicSubnetTag2: !Sub "kubernetes.io/cluster/${AWS::StackName}-${AWS::Region}=owned"
        PublicSubnetTag3: "kubernetes.io/role/elb="
        VPCCIDR: !Ref 'VPCCIDR'
  EKSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PublicSubnet3ID: !GetAtt VPCStack.Outputs.PublicSubnet3ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}submodules/quickstart-amazon-eks/"
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt VPCStack.Outputs.PrivateSubnet3AID
        NumberOfNodes: !Ref NumberOfAppNodes
        NodeGroupName: !Ref NodeGroupName
        NodeVolumeSize: !Ref NodeVolumeSize
        LambdaZipsBucketName: !Ref LambdaZipsBucketName
        NodeInstanceType: !Ref NodeInstanceType
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        AdditionalEKSAdminArns: !Join [ ",", !Ref AdditionalEKSAdminArns ]
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        KubernetesVersion: "1.15"
        BastionOS: SUSE-SLES-15-HVM
        NodeAMIOS: SUSE-SLES-15-HVM
        BootstrapArguments: "--kubelet-extra-args --node-labels=nodegroup=Default"
        BastionBootstrapScript: !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
  CapStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/suse-cap.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        KubeManifestLambdaArn: !GetAtt EKSStack.Outputs.KubeManifestLambdaArn
        KubeGetLambdaArn: !GetAtt EKSStack.Outputs.KubeGetLambdaArn
        KubeConfigPath: !GetAtt EKSStack.Outputs.KubeConfigPath
        KubeConfigKmsContext: "EKSQuickStart"
        ControlPlaneSecurityGroup: !GetAtt EKSStack.Outputs.ControlPlaneSecurityGroup
        EKSClusterName: !GetAtt EKSStack.Outputs.EKSClusterName
        NodeInstanceProfile: !GetAtt EKSStack.Outputs.NodeInstanceProfile
        KubernetesVersion: "1.15"
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt VPCStack.Outputs.PrivateSubnet3AID
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        HelmLambdaArn: !GetAtt EKSStack.Outputs.HelmLambdaArn
        AdminPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref AdminPassword, ':SecretString:password}}' ]]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion
        KeyPairName: !Ref KeyPairName
        UaaPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref UaaPassword, ':SecretString:password}}' ]]
        DomainName: !Ref DomainName
        HostedZoneID: !Ref HostedZoneID
        NodeInstanceRoleName: !GetAtt EKSStack.Outputs.NodeInstanceRoleName
        NodeGroupSecurityGroup: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup
        SubDomainPrefix: !Ref SubDomainPrefix
        UaaMysqlReplicas: !Ref UaaMysqlReplicas
        UaaReplicas: !Ref UaaReplicas
        TcpRouterReplicas: !Ref TcpRouterReplicas
        ScfMysqlReplicas: !Ref ScfMysqlReplicas
        RoutingApiReplicas: !Ref RoutingApiReplicas
        RouterReplicas: !Ref RouterReplicas
        NatsReplicas: !Ref NatsReplicas
        DiegoSshReplicas: !Ref DiegoSshReplicas
        DiegoBrainReplicas: !Ref DiegoBrainReplicas
        DiegoApiReplicas: !Ref DiegoApiReplicas
        CcUploaderReplicas: !Ref CcUploaderReplicas
        DiegoCellReplicas: !Ref NumberOfAppNodes
        CcClockReplicas: !Ref CcClockReplicas
        CcWorkerReplicas: !Ref CcWorkerReplicas
        CfUsbReplicas: !Ref CfUsbReplicas
        AdapterReplicas: !Ref AdapterReplicas
        ApiGroupReplicas: !Ref ApiGroupReplicas
        ConsoleChartVersion: "3.0.0"
        StratosWebConsole: !Ref StratosWebConsole
        RemoteAccessCIDRs: !Sub "${RemoteAccessCIDR},${VPCStack.Outputs.NAT1EIP}/32,${VPCStack.Outputs.NAT2EIP}/32,${VPCStack.Outputs.NAT3EIP}/32,${EKSStack.Outputs.BastionIP}/32"
        NumberOfNodes: !Ref NumberOfInfraNodes
        BastionSecurityGroupID: !GetAtt EKSStack.Outputs.BastionSecurityGroup
        StratosAZ: !Select [ 0, !Ref AvailabilityZones ]
        CleanupSecurityGroupDependenciesLambdaArn: !GetAtt 'EKSStack.Outputs.CleanupSecurityGroupDependenciesLambdaArn'
  AdminPassword:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludePunctuation: true
  UaaPassword:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludePunctuation: true
  CleanupSecurityGroupDependencies:
    Type: Custom::Ceanup
    Properties:
      ServiceToken: !GetAtt 'EKSStack.Outputs.CleanupSecurityGroupDependenciesLambdaArn'
      SecurityGroups: [!GetAtt EKSStack.Outputs.NodeGroupSecurityGroup, !GetAtt EKSStack.Outputs.BastionSecurityGroup, !GetAtt CapStack.Outputs.NodeSecurityGroup]
Outputs:
  KubeConfigPath:
    Value: !GetAtt EKSStack.Outputs.KubeConfigPath
  BastionIP:
    Value: !GetAtt EKSStack.Outputs.BastionIP
  UaaEndpoint:
    Value: !GetAtt CapStack.Outputs.UaaEndpoint
  CfApiEndpoint:
    Value: !GetAtt CapStack.Outputs.CfApiEndpoint
  AdminPassword:
    Value: !Ref AdminPassword
  UaaPassword:
    Value: !Ref UaaPassword
  ConsoleEndpoint:
    Value: !GetAtt CapStack.Outputs.StratosConsoleEndpoint
